using System.Numerics;
using Emotion.Graphics.Command;
using Emotion.Graphics.Objects;

namespace Solution12.Scenes.Graphics.Command
{
    /// <summary>
    /// Render Command specifically for rendering a sprite between 4 specific vertices, as opposed to the default behaviour of <see cref="RenderSpriteCommand"/>,
    /// which takes a single Vertex and generates the rest as [X,Y] offsets based on <see cref="Emotion.Graphics.Command.RenderSpriteCommand.Size"/>
    /// </summary>
    public class RenderTileCommand : RenderSpriteCommand
    {
        private readonly Vector3[] _boundingVertices;

        public RenderTileCommand(Vector3 vertex0, Vector3 vertex1, Vector3 vertex2, Vector3 vertex3, Texture texture = null) : base()
        {
            this._boundingVertices = new Vector3[4] {vertex0, vertex1, vertex2, vertex3};

            this.Position = vertex0;
            this.Color = Emotion.Primitives.Color.White.ToUint();
            this.Texture = texture;
        }

        public override void Process()
        {
            base.Process();

            // Reassign all but the first vertex, from the ones generated by RenderSpriteCommand#Process to ones passed @ the Constructor
            for (var i = 1; i < Vertices.Length; i++)
                Vertices[i].Vertex = _boundingVertices[i];
        }
    }
}